name: Functional tests

on: [push]

jobs:
  build:

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f testing-requirements.txt ]; then pip install -r testing-requirements.txt; fi
          pip install -e .      
      - name: Decrypt certs
        env: 
          GPG_ENC_PASS: ${{ secrets.GPG_ENC_PASS }}
        run: |
          mkdir -p $HOME/.globus
          gpg --quiet --batch --yes --decrypt --passphrase="$GPG_ENC_PASS" --output $HOME/.globus/userkey.pem tests/userkey.pem.gpg 
          gpg --quiet --batch --yes --decrypt --passphrase="$GPG_ENC_PASS" --output $HOME/.globus/usercert.pem tests/usercert.pem.gpg 
      # - name: Lint with ruff
      #   run: |
      #     # stop the build if there are Python syntax errors or undefined names
      #     ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
      #     # default set of ruff rules with GitHub Annotations
      #     ruff --format=github --target-version=py37 .
      - name: Test with pytest
        env: 
          SSO_CLIENT_ID: ${{ secrets.SSO_CLIENT_ID }}
          SSO_CLIENT_SECRET: ${{ secrets.SSO_CLIENT_SECRET }}
          GPG_ENC_PASS: ${{ secrets.GPG_ENC_PASS }}
        run: |
          pytest tests